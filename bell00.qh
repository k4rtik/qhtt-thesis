bell00 : () -> QST (a, b): (qbit⊗qbit)
                   (requires {⊤})
                   (ensures  {(a,b) =q |β00⟩})
bell00 = circ () -> do
            qa <- init 0
            apply H to qa
            qb <- init 0
            apply CX to (qa, qb)
            return (qa, qb)

bell00 : () -> QST (a, b): (qbit⊗qbit)
                   (requires {⊤})
                   (ensures  {(a,b) =q |β00⟩})
bell00 = circ () -> do
            -- ⊤
            qa <- init 0
            -- qa =q |0⟩
            apply H to qa
            -- (H on qa).(qa =q |0⟩) ⇒ qa =q |+⟩
            qb <- init 0
            -- qa =q |+⟩, qb =q |0⟩
            apply CX to (qa, qb)
            -- (CX on (qa, qb)).(qa =q |+⟩, qb =q |0⟩) ⇒ (a,b) =q |β00⟩
            return (qa, qb)
