cointoss : unit -> QST b: bit
                       (requires {⊤})
                       (ensures  {uniform(b)})
cointoss = \x.do
              q <- init 0
              apply H to q
              b <- meas q
              return b

cointoss : unit -> QST b: bit
                       (requires {⊤})
                       (ensures  {uniform(b)})
cointoss = \x.do
              -- ⊤
              q <- init 0
              -- q =q |0⟩
              apply H to q
              -- q =q 1/√2(|0⟩+|1⟩) ⇒ q =q |+⟩
              -- => uniform(q)
              x <- meas q
              -- class(q), e_x =q |+⟩
              return x
